@use '../settings/metis-variables-grid';
@use '../../scss/generic/variables-bp';
@use '../../scss/generic/variables-colours';
@use '../../scss/generic/variables-font';

$space-overflow-selected: 0.25em;

.grid-cell {
  a {
    color: variables-colours.$eu-blue-link;
    text-decoration: underline;
  }
}

.grid-cell,
.grid-sub {
  align-items: center;
  display: flex;
  padding: 1em 0;

  @media (min-width: variables-bp.$bp-med) {
    display: inline-block;
    line-height: 2.25em;
  }
}

.grid-header,
.grid-header-underlined {
  white-space: nowrap;

  &.small-title {
    text-transform: uppercase;
  }
  margin-bottom: 1em;
}

.grid-header-underlined {
  &:first-of-type,
  &.last-header {
    position: relative;
    &::after {
      bottom: -1em;
      content: ' ';
      display: block;
      height: 3px;
      position: absolute;
      width: 100000em;
    }
  }

  &:first-of-type {
    &::after {
      background: variables-colours.$eu-jade;
      left: -2em;
    }
  }

  &.last-header {
    overflow: hidden;

    &::after {
      /* create 'space' for selection line to occupy */
      background: variables-colours.$offwhite;
      height: 10em;
      right: -1.75em;
      top: -1em;
      width: $space-overflow-selected;
    }
  }
}

.search-results-grid,
.ongoing-executions,
.executions-grid {
  background: variables-colours.$white;
  color: variables-colours.$gray-light;
  font-size: variables-font.$font-size-metis-grid;
  overflow: hidden;
}

.ongoing-executions,
.executions-grid {
  margin-bottom: 2em;
  margin-right: -0.5em;
}

.row-divider {
  position: relative;

  /* horizontal line (top) */
  &::before {
    background: variables-colours.$offwhite;
    content: ' ';
    display: block;
    height: metis-variables-grid.$grid-row-border-height;
    position: absolute;
    top: 0;
    transform: translateX(-20%);
    width: metis-variables-grid.$grid-size-massive;
    z-index: 4;
  }
}

.row-start {
  position: relative;

  /* hover / active indicator */
  &::after {
    content: ' ';
    display: block;
    position: absolute;
    background: variables-colours.$white;
    left: -1em;
    width: 0.25em;
  }

  &.active {
    &::after {
      background: variables-colours.$eu-jade;
    }
  }

  /* hover / click target */
  &::before {
    cursor: pointer;
    height: 500%;
    top: 0;
    width: metis-variables-grid.$grid-size-massive;
    @media (min-width: variables-bp.$bp-med) {
      height: 100%;
    }
  }

  /* avoid trapping link click events */
  a {
    position: relative;
    z-index: 1;
  }
}

/* side edges */
@media (min-width: variables-bp.$bp-med) {
  .row-end,
  .row-start {
    &::after {
      height: metis-variables-grid.$grid-size-massive;
      top: 0;
      z-index: 3;
    }
  }
}
