@use 'shared-styles/assets/sass/scss/generic/variables-colours';
@use 'shared-styles/assets/sass/scss/iconography/svg-icons-metis';

@mixin debias() {
  .debias-display:not(:has(:active)):hover .debias-opener {
    color: variables-colours.$gray-light;
  }

  .mini-controls {
    .open-info {
      background: svg-icons-metis.svg-url-icon-info(variables-colours.$gray-med) center / 14px
        no-repeat;
      &:hover {
        background-image: svg-icons-metis.svg-url-icon-info(variables-colours.$gray-light);
      }
    }

    .csv-download {
      background-color: variables-colours.$eu-grey-dark;
      &:hover {
        background-color: variables-colours.$gray-light;
      }
    }
  }

  .dereference-link-debias.loading::after {
    background-image: svg-icons-metis.svg-url-icon-spin(variables-colours.$gray-med);
  }

  .debias-link {
    &.disabled::before {
      background-image: svg-icons-metis.svg-url-icon-eye(variables-colours.$gray-light);
    }

    &::after {
      background-image: svg-icons-metis.svg-url-debias(variables-colours.$gray-med);
    }
    &:hover {
      &::after {
        background-image: svg-icons-metis.svg-url-debias(variables-colours.$gray-light);
      }
    }

    &:active::after {
      background-image: svg-icons-metis.svg-url-debias(variables-colours.$eu-green-light);
    }
  }

  .external-link-debias {
    color: variables-colours.$gray-light;

    &::after {
      background-image: svg-icons-metis.svg-url-icon-external(variables-colours.$gray-light);
    }
    &:hover {
      color: variables-colours.$gray-med;
      &::after {
        background-image: svg-icons-metis.svg-url-icon-external(variables-colours.$gray-med);
      }
    }
    &:active,
    &:focus-visible {
      color: variables-colours.$eu-green-light;
      &::after {
        background-image: svg-icons-metis.svg-url-icon-external(variables-colours.$eu-green-light);
      }
    }
  }

  // cleaner select of element that's stretched by grid
  .debias-detection-grid > .external-link-debias:focus-visible {
    outline-color: transparent;
    &::before {
      color: variables-colours.$eu-green-light;
      outline: 1px solid variables-colours.$eu-orange;
    }
  }
}
