@import '../../../../assets/sass/scss/generic/variables';
@import '../../../../assets/sass/pandora/settings/metis-variables';

$massive: 10000px;
$orb-size: 1.5em;
$row-border-height: 0.5em;
$row-border-height-half: 3px;

@keyframes glowing {
  0% {
    box-shadow: 0 0 -3px $color-status-running;
  }
  50% {
    box-shadow: 0 0 3px $color-status-running;
  }
  100% {
    box-shadow: 0 0 -3px $color-status-running;
  }
}

@keyframes pulseInqueue {
  0% {
    box-shadow: 0 0 0 0 rgba($color-status-inqueue, 0.4);
  }
  70% {
    box-shadow: 0 0 0 5px rgba($color-status-inqueue, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba($color-status-inqueue, 0);
  }
}

@keyframes pulsePending {
  0% {
    box-shadow: 0 0 0 0 rgba($color-status-pending, 0.4);
  }
  70% {
    box-shadow: 0 0 0 5px rgba($color-status-pending, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba($color-status-pending, 0);
  }
}

.error-count {
  color: $eu-red;
}

.orbs {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.orb-status {
  border-radius: 0.75em;
  display: inline-block;
  height: $orb-size;
  margin: 0.2em 0.3em 0.2em 0;
  min-width: $orb-size;
  pointer-events: none;
  position: relative;
  width: $orb-size;

  border-style: solid;
  border-width: 1px;

  &.status-inqueue {
    border-color: $color-status-inqueue;
  }
  &.status-cancelled {
    border-color: $color-status-cancelled;
  }
  &.status-cleaning {
    border-color: $color-status-cleaning;
  }
  &.status-failed {
    border-color: $color-status-failed;
  }
  &.status-finished {
    border-color: $color-status-finished;
  }
  &.status-pending {
    border-color: $color-status-pending;
  }
  &.status-running {
    border-color: $color-status-running;
  }
  &.status-warning {
    border-color: $color-status-warning;
  }

  &:after {
    font-size: 0.7em;
    font-weight: bold;
    position: absolute;
    text-align: center;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
  }

  &.HTTP_HARVEST:after {
    content: 'Hh';
  }
  &.OAIPMH_HARVEST:after {
    content: 'Ho';
  }
  &.TRANSFORMATION:after {
    content: 'T';
  }
  &.LINK_CHECKING:after {
    content: 'L';
  }
  &.ENRICHMENT:after {
    content: 'E';
  }
  &.MEDIA_PROCESS:after {
    content: 'M';
  }
  &.VALIDATION_EXTERNAL:after {
    content: 'Ve';
  }
  &.VALIDATION_INTERNAL:after {
    content: 'Vi';
  }
  &.NORMALIZATION:after {
    content: 'N';
  }
  &.PENDING:after {
    content: 'Pe';
  }
  &.PREVIEW:after {
    content: 'Pr';
  }
  &.PUBLISH:after {
    content: 'Pu';
  }
}

.grid-cell,
.grid-sub {
  @media (max-width: $bp-med) {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  @media (min-width: $bp-med) {
    line-height: 2.25em;
    padding: 1em 0;
  }
}

.status-label,
.time {
  color: #ccc;
}

.time {
  margin-right: 1em;
}

.row-start {
  grid-column-start: start;
  position: relative;

  // hover / active indicator

  &::after {
    background: $offwhite;
    content: ' ';
    display: block;
    position: absolute;
    background: $white;
    height: $massive;
    left: -1em;
    top: 0;
    width: 0.5em;
    z-index: 1;
  }

  &.active,
  &:hover {
    &::after {
      background: $eu-jade;
    }
  }

  /*
  //  horizontal line

  &::before {
    background: $offwhite;
    bottom: -$row-border-height;
    content: ' ';
    position: absolute;
    width: $massive;
    height: $row-border-height;
    display: block;
  }
  */

  // hover / click target
  &::before {
    content: ' ';
    display: block;
    cursor: pointer;
    height: 500%;
    position: absolute;
    top: 0;
    width: $massive;
    @media (min-width: $bp-med) {
      height: 100%;
    }
  }

  // avoid trapping link click events
  a {
    position: relative;
    z-index: 1;
  }
}

.grid-sub {
  @media (max-width: $bp-med) {
    margin-left: 2em;
  }
  &.start {
    grid-column-start: sub-start;
    position: relative;

    &::after {
      background: $offwhite;
      bottom: -$row-border-height-half;
      content: ' ';
      left: -1000px;
      position: absolute;
      width: $massive;
      height: $row-border-height-half;
      display: block;
    }
  }
  &.labelled-orb {
    align-items: center;
    display: flex;

    :first-child {
      @media (min-width: $bp-med) {
        margin-right: 0.5em;
      }
    }
  }
  &.dates {
    grid-column-start: sub-date-start;
    grid-column-end: sub-date-end;
  }
  .orb-status {
    &.status-inqueue {
      animation: pulseInqueue 4000ms infinite;
    }
    &.status-pending {
      animation: pulsePending 3000ms infinite;
    }
    &.status-running {
      animation: glowing 2000ms infinite;
    }
  }
}
